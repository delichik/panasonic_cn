name: Release

on:
  push:
    tags:
      - "v*"
  workflow_dispatch:
    inputs:
      version:
        description: 'Version number (e.g., v1.0.0)'
        required: true
        type: string

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Get version
        id: get_version
        run: |
          if [ "${{ github.event_name }}" = "workflow_dispatch" ]; then
            echo "version=${{ github.event.inputs.version }}" | sed 's/^v//' >> $GITHUB_OUTPUT
            echo "tag=${{ github.event.inputs.version }}" >> $GITHUB_OUTPUT
          else
            echo "version=${GITHUB_REF#refs/tags/v}" >> $GITHUB_OUTPUT
            echo "tag=${GITHUB_REF#refs/tags/}" >> $GITHUB_OUTPUT
          fi

      - name: Create tag if not exists
        if: github.event_name == 'workflow_dispatch'
        run: |
          if ! git rev-parse ${{ github.event.inputs.version }} >/dev/null 2>&1; then
            git config --global user.email "github-actions[bot]@users.noreply.github.com"
            git config --global user.name "github-actions[bot]"
            git tag ${{ github.event.inputs.version }}
            git push origin ${{ github.event.inputs.version }}
          fi

      - name: Get Changelog
        id: get_changelog
        run: |
          current_tag="${{ steps.get_version.outputs.tag }}"
          previous_tag=$(git tag --sort=-version:refname | grep -A 1 "$current_tag" | tail -n 1)
          
          {
            echo 'changelog<<CHANGELOG_EOF'
            if [ -z "$previous_tag" ] || [ "$previous_tag" = "$current_tag" ]; then
              git log --pretty=format:"* %s (%h)"
            else
              git log --pretty=format:"* %s (%h)" ${previous_tag}..${current_tag}
            fi
            echo
            echo 'CHANGELOG_EOF'
          } >> "$GITHUB_OUTPUT"

      - name: Create ZIP archive
        run: |
          cd custom_components/panasonic_cn
          zip -r ../../panasonic_cn.zip ./*

      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: Release ${{ steps.get_version.outputs.version }}
          tag_name: ${{ steps.get_version.outputs.tag }}
          body: |
            ## What's Changed
            ${{ steps.get_changelog.outputs.changelog }}
            
            ## Installation
            1. Install HACS if you haven't already
            2. Add this repository to HACS:
               - URL: `https://github.com/delichik/panasonic_cn`
               - Category: `Integration`
            3. Install the "Panasonic CN" integration
            4. Restart Home Assistant
            5. Add the integration through the Home Assistant UI

          draft: false
          prerelease: false
          files: panasonic_cn.zip
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
